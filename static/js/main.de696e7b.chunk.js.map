{"version":3,"sources":["images/tophat.png","images/fedora.png","images/reporter-hat-with-card.png","images/chesserOctocat.png","images/linked-in.png","images/mail.png","containers/About.js","components/ProjectDetail.js","enumerables/projectObj.js","containers/Projects.js","components/BlogDetail.js","enumerables/blogObj.js","containers/Blogs.js","components/Tophat.js","components/Fedora.js","components/ReporterHat.js","components/GitHubIcon.js","components/LinkedInIcon.js","components/EmailIcon.js","containers/ContactIcons.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","react_default","a","createElement","className","ProjectDetail","_ref","title","description","githubLink","techUsed","href","alt","target","rel","projects","id","inProgressProjects","Projects","Fragment","map","project","components_ProjectDetail","Object","assign","key","BlogDetail","desc","link","blogsArray","Blogs","blog","components_BlogDetail","TopHat","src","topHat","Fedora","fedora","ReporterHat","reporterHat","GitHubIcon","gitHubIcon","LinkedInIcon","linkedIn","EmailIcon","emailIcon","ContactIcons","components_GitHubIcon","components_LinkedInIcon","components_EmailIcon","App","Tophat","containers_About","components_Fedora","containers_Projects","components_ReporterHat","containers_Blogs","containers_ContactIcons","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de696e7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tophat.e90855c0.png\";","module.exports = __webpack_public_path__ + \"static/media/fedora.67818725.png\";","module.exports = __webpack_public_path__ + \"static/media/reporter-hat-with-card.5c70230d.png\";","module.exports = __webpack_public_path__ + \"static/media/chesserOctocat.68770d34.png\";","module.exports = __webpack_public_path__ + \"static/media/linked-in.42b8de02.png\";","module.exports = __webpack_public_path__ + \"static/media/mail.98e79e33.png\";","import React from 'react'\n\n\nconst About = () =>{\n    return(\n        <div className=\"about-wrapper text\"> \n        <div className=\"about-text-wrapper\">\n\n            <p>I came to coding through a five-day class one of my friends was offering, where we taught a robot to do basic tasks using JavaScript. It was fun, engaging, and spoke to my own problem solving process – analyzing larger problems and breaking them down into discreet manageable pieces. Building solutions to complex problems in this way has always fascinated me. With this small taste of the power of coding, I was hooked.</p>\n     \n            <p>Coding also connects to my passion for building community and connection. As a teacher, I’d seen the incredible impact the web had on my students and their sense of belonging. It gives groups that have felt marginalized a place where they can find others like themselves – beyond the limits of their geography - to belong to and develop a larger community. </p>\n        </div>\n        </div>\n    )\n}\n\nexport default About ","import React from 'react'\n\nconst ProjectDetail = ({title, description, githubLink, techUsed})=>{\n    return(\n        <div className=\"project-detail-div\">\n            <div className=\"project-header\">\n                <a href={githubLink} alt=\"git hub project\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <p className=\"project-detail-title\">{title}</p>\n                </a>\n            </div>\n            <p className=\"project-detail-desc\">{description}</p>\n            <p className=\"project-detail-tech\"><strong>Tech used:</strong>  {techUsed}</p>\n        </div>\n    )\n}\n\nexport default ProjectDetail","export const projects = [\n    {   \n        id: \"p1\",\n        title: \"Flatiron Students Connect\",\n        description: \"A program designed as place that students can take and share notes and resources while going through the Flatiron course.\",\n        githubLink: \"https://github.com/wley3337/Flightiron-Students-Connect\",\n        techUsed: \"React, Clientside Routing, JWT Token Auth., Redux, Thunk, CSS Grid, and the Semantic UI React Library, Ruby on Rails w/ PostgressSQL for persistence\"\n    },\n\n    {   \n        id: \"p2\",\n        title: \"MeetByMe\",\n        description: \"A way to look at MeetUps happening near your current location. It allows you to save the MeetUp and displays its location relative to yours using MapBoxGL.\",\n        githubLink: \"https://github.com/wley3337/MeetByMe\",\n        techUsed: \"React, Client side Routing, JWT Token Auth., Ruby on Rails w/ PostgressSQL for persistence, External APIs: MapboxGL and MeetUp\"\n    },\n    {   \n        id: \"p3\",\n        title: \"Onitama\",\n        description: \"A clone of the board game Onitama. It's a combination between chess and checkers where players compete using 5 of the 16 different movement cards chosen randomly at the start of the game.\",\n        githubLink: \"https://github.com/wley3337/onitama-frontend\",\n        techUsed: \"JavaScript, AJAX, HTML 5, CSS Grid, Ruby on Rails w/ PostgressSQL for persistence\"\n    },\n    {   \n        id: \"p4\",\n        title: \"RentOrBuyYourStuff\",\n        description: \"A Craig's list Ruby on Rails sight. Users can post items they want to rent or sell. Users can also rent items over a given period of time and deactivate the times they no longer wish to rent out. This removes the item from rental but does not cancel existing rentals.\",\n        githubLink: \"https://github.com/wley3337/RentOrBUYourStuff\",\n        techUsed: \"Ruby on Rails w/ PostgressSQL for persistence\"\n    }\n\n]\n\nexport const inProgressProjects = [\n    {\n        id: \"ipp1\",\n        title: \"WeRHere\",\n        description: \"A progressive web app for people experiencing homelessness. Using Washington DC's open data API's it provides users with the ability to see where primary care, clinics, shelters, WIC and Fresh Food program locations are located throughout the city.\",\n        githubLink: \"https://github.com/wley3337/WeRHere\",\n        techUsed: \"React, Client Side Routing, Redux, Thunk, CSS Grid, and the Semantic UI React Library, and multiple external API's (see README)\"\n    }\n]\n\n","import React from 'react'\nimport ProjectDetail from '../components/ProjectDetail'\nimport {inProgressProjects, projects} from '../enumerables/projectObj'\n\nconst Projects = () =>{\n    return( \n       <React.Fragment>\n            <h1 className=\"project-section-title\">Projects</h1>\n            <div className=\"projects-wrapper\">\n                <h3 className=\"text projects-headers\">Work in Progress</h3>\n                {inProgressProjects.map( project => <ProjectDetail key={project.id} {...project}/> )}\n\n                <h3 className=\"text projects-headers\">Completed Works</h3>\n                {projects.map( project => <ProjectDetail key={project.id} {...project} /> )}\n            </div>\n       </React.Fragment>\n    )\n}\n\nexport default Projects ","import React from 'react'\n\nconst BlogDetail = ({title, desc, link}) =>{\n    return (\n        <div className=\"blog-detail-wrapper\">\n            <div className=\"blog-detail-header\">\n                <a href={link} alt=\"blog article\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"blog-detail-title text\">\n                    {title}\n                </a> \n            </div>\n            <p className=\"blog-detail-desc\">{desc}</p>\n        </div>\n    )\n}\n\nexport default BlogDetail\n ","export const blogsArray = [\n    {\n        id: \"b1\",\n        title: \"Searchable toolbar with Semantic UI React with user input\",\n        desc: \"A walk through on how to use Semantic UI toolbar with React without Redux.\",\n        link: \"https://medium.com/@wley3337/searchable-tool-bar-with-semantic-ui-react-with-user-input-f6b46c80395\"\n    },\n    {\n        id: \"b2\",\n        title: \"Promises, promises….\",\n        desc: \"A look at promise objects in JavaScript and an explanation of why we use them and how to chain them together.\",\n        link: \"https://medium.com/@wley3337/promises-promises-6cf6bbd5104b\"\n    },\n    {\n        id: \"b3\",\n        title: \"Promise.all the DIY of JavaScript\",\n        desc: \"An extension on Promises, promises... this looks at Promise.all and it's use when you need information from multiple a-sync functions all at once in order to move forward in your programing.\",\n        link: \"https://medium.com/@wley3337/promise-all-the-diy-of-javascript-96c068bca167\"\n    },\n    {\n        id: \"b4\",\n        title: \"Working with memory objects and their relationship to the database\",\n        desc: \"In this post, I walk through managing memory objects and persisted data and some of the gotcha moments when working with them, mainly updating persisted data vs memory objects.\",\n        link: \"https://medium.com/@wley3337/working-with-memory-objects-and-their-relationship-to-the-database-827115d43e90\"\n    },\n    {\n        id: \"b5\",\n        title: \"Rspec and the basics\",\n        desc: \"This post walks through some of the basic syntax of Rspec in my first encounters using rspec with a CLI. It mainly covers confusion over old 2.x syntax and the new 3.x syntax.\",\n        link: \"https://medium.com/@wley3337/rspec-and-the-basics-19eedb1f6198\"\n    }\n]\n","import React from 'react'\nimport BlogDetail from '../components/BlogDetail'\nimport { blogsArray } from '../enumerables/blogObj'\n\n\nconst Blogs =() =>{\n    return(\n        <div className=\"blogs-wrapper\">\n            <h1 className=\"blogs-section-title\">Blogs</h1>\n            <h3 className=\"blog-sub-heading\">(A Selection)</h3>\n            <div className=\"blogs-details-wrapper\">\n                {blogsArray.map( blog => <BlogDetail key={blog.id} {...blog} /> )}\n            </div>\n        </div>\n    )\n}\n\nexport default Blogs ","import React from 'react'\nimport topHat from '../images/tophat.png'\n\n\nconst TopHat = ()=>{\n    return <img id=\"top-hat\" src={topHat} alt=\"Tophat\" />\n}\n\nexport default TopHat","import React from 'react'\nimport fedora from '../images/fedora.png'\n\n\nconst Fedora = () =>{\n    return <img src={fedora} alt=\"blue fedora\" id=\"fedora\" /> \n}\n\nexport default Fedora","import React from 'react'\nimport reporterHat from '../images/reporter-hat-with-card.png'\n\nconst ReporterHat = () =>{\n    return <img id=\"reporter-hat\" src={reporterHat} alt=\"fedora with playing card\" />\n}\n\nexport default ReporterHat","import React from 'react'\nimport gitHubIcon from '../images/chesserOctocat.png'\n\nconst GitHubIcon = () =>{\n    return (\n        <a  href={\"https://github.com/wley3337\"} alt=\"Git Hub\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"git-hub-wrapper\">\n            \n                <img className=\"git-hub-icon\" src={gitHubIcon} alt=\"Git Hub Icon\" />\n                <p className=\"text git-hub-label\">Git Hub</p>\n        \n        </a>\n    )\n}\n\nexport default GitHubIcon","import React from 'react'\nimport linkedIn from '../images/linked-in.png'\n\nconst LinkedInIcon = () =>{\n    return(  \n        <a  href={\"https://www.linkedin.com/in/wley3337/\"} alt=\"Linked In Profile\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"linked-in-wrapper\">\n            \n                <img className=\"linked-in-icon\" src={linkedIn} alt=\"Linked In icon\" />\n                <p className=\"text linked-in-label\">Linked In</p>\n    \n        </a>\n    ) \n}\n\nexport default LinkedInIcon","import React from 'react'\nimport emailIcon from '../images/mail.png'\n\nconst EmailIcon = () =>{\n    return (\n        <a className=\"email-icon-wrapper text\" href={\"mailto: will.ley@madhatter.dev\"} alt=\"email\" >\n            \n                <img className=\"email-icon\" src={emailIcon} alt=\"Email Icon\"/>\n                <p className=\"text email-icon-label\">will.ley@madhatter.dev</p>\n    \n        </a>\n    )\n    \n    \n}\n\nexport default EmailIcon","import React from 'react'\nimport GitHubIcon from '../components/GitHubIcon'\nimport LinkedInIcon from '../components/LinkedInIcon'\nimport EmailIcon from '../components/EmailIcon'\n\n\nconst ContactIcons = () =>{\n    return(\n        <div className=\"contact-wrapper\">\n            <h1 className=\"contact-header\">Please keep in touch!</h1>\n            <div className=\"contact-icon-wrapper\">\n                <GitHubIcon />\n                <LinkedInIcon />\n                <EmailIcon/>\n            </div>\n        </div>\n    )\n}\n\nexport default ContactIcons","import React from 'react';\nimport About from './About'\nimport Projects from './Projects'\nimport Blogs from './Blogs'\nimport TopHat from '../components/Tophat'\nimport Fedora from '../components/Fedora'\nimport ReporterHat from '../components/ReporterHat'\nimport ContactIcons from './ContactIcons';\n\n\nfunction App() {\n  return (\n    <div className=\"main\" >\n    <div className=\"content-wrapper\">\n      <h1 className=\"text name-title\">Will Ley</h1>\n      <h3 className=\"welcome-text\">Developer, life long learner, and wearer of many hats.</h3>\n      <TopHat />\n      <About />\n      <Fedora />\n      <Projects /> \n      <ReporterHat />\n      <Blogs />\n      <ContactIcons/>\n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './cssFiles/index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}